{"ast":null,"code":"var _jsxFileName = \"/Volumes/Samsung_T5/mac/Programming/JS/Projects/react/chess/react-chess-init/src/components/BoardComponents.tsx\";\nimport React from \"react\";\nimport CellComponent from \"./CellComponent\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst BoardComponents = ({\n  board,\n  setBoard\n}) => {\n  let w;\n  console.log(w);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"board\",\n    children: board.cells.map((row, index) => /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: row.map(cell => /*#__PURE__*/_jsxDEV(CellComponent, {\n        cell: cell\n      }, cell.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 25\n      }, this))\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 17\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 9\n  }, this);\n};\n\n_c = BoardComponents;\nexport default BoardComponents;\n\nvar _c;\n\n$RefreshReg$(_c, \"BoardComponents\");","map":{"version":3,"sources":["/Volumes/Samsung_T5/mac/Programming/JS/Projects/react/chess/react-chess-init/src/components/BoardComponents.tsx"],"names":["React","CellComponent","BoardComponents","board","setBoard","w","console","log","cells","map","row","index","cell","id"],"mappings":";AAAA,OAAOA,KAAP,MAA0B,OAA1B;AAEA,OAAOC,aAAP,MAA0B,iBAA1B;;;AAOA,MAAMC,eAA+B,GAAG,CAAC;AAACC,EAAAA,KAAD;AAAQC,EAAAA;AAAR,CAAD,KAAuB;AAC3D,MAAIC,CAAJ;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYF,CAAZ;AAEA,sBACI;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA,cACKF,KAAK,CAACK,KAAN,CAAYC,GAAZ,CAAgB,CAACC,GAAD,EAAMC,KAAN,kBACb,QAAC,KAAD,CAAO,QAAP;AAAA,gBACKD,GAAG,CAACD,GAAJ,CAASG,IAAD,iBACL,QAAC,aAAD;AACI,QAAA,IAAI,EAAEA;AADV,SAESA,IAAI,CAACC,EAFd;AAAA;AAAA;AAAA;AAAA,cADH;AADL,OAAqBF,KAArB;AAAA;AAAA;AAAA;AAAA,YADH;AADL;AAAA;AAAA;AAAA;AAAA,UADJ;AAcH,CAlBD;;KAAMT,e;AAqBN,eAAeA,eAAf","sourcesContent":["import React, { FC } from \"react\";\nimport { Board } from \"../models/Board\";\nimport CellComponent from \"./CellComponent\";\n\ninterface BoardProps {\n    board: Board;\n    setBoard: (board: Board) => void;\n}\n\nconst BoardComponents: FC<BoardProps> = ({board, setBoard}) => {\n    let w;\n    console.log(w)\n    \n    return (\n        <div className=\"board\">\n            {board.cells.map((row, index) => \n                <React.Fragment key={index}>\n                    {row.map((cell) => \n                        <CellComponent\n                            cell={cell}\n                            key={cell.id}\n                        />  \n                    )}\n                </React.Fragment>\n            )}\n        </div>\n    )\n}\n\n\nexport default BoardComponents"]},"metadata":{},"sourceType":"module"}