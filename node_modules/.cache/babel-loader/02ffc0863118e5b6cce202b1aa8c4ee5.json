{"ast":null,"code":"var _jsxFileName = \"/Volumes/Samsung_T5/mac/Programming/JS/Projects/react/chess/src/components/BoardComponents.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport CellComponent from \"./CellComponent\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst BoardComponents = ({\n  board,\n  setBoard,\n  currentPlayer,\n  swapPlayer\n}) => {\n  _s();\n\n  const [selectedCell, setSelectedCell] = useState(null);\n\n  function click(cell) {\n    var _selectedCell$figure;\n\n    if (selectedCell && selectedCell !== cell && ((_selectedCell$figure = selectedCell.figure) === null || _selectedCell$figure === void 0 ? void 0 : _selectedCell$figure.canMove(cell))) {\n      selectedCell.moveFigure(cell);\n      setSelectedCell(null);\n    } else {\n      var _cell$figure;\n\n      if (((_cell$figure = cell.figure) === null || _cell$figure === void 0 ? void 0 : _cell$figure.color) === (currentPlayer === null || currentPlayer === void 0 ? void 0 : currentPlayer.color)) {\n        setSelectedCell(cell);\n      }\n    }\n  }\n\n  useEffect(() => {\n    hightLightCells();\n  }, [selectedCell]);\n\n  function hightLightCells() {\n    board.hightLightCells(selectedCell);\n    updateBoard();\n  }\n\n  function updateBoard() {\n    const newBoard = board.getCopyBoard();\n    setBoard(newBoard);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"board\",\n    children: board.cells.map((row, index) => /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: row.map(cell => /*#__PURE__*/_jsxDEV(CellComponent, {\n        click: click,\n        cell: cell,\n        selected: cell.x === (selectedCell === null || selectedCell === void 0 ? void 0 : selectedCell.x) && cell.y === (selectedCell === null || selectedCell === void 0 ? void 0 : selectedCell.y)\n      }, cell.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 25\n      }, this))\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 17\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 9\n  }, this);\n};\n\n_s(BoardComponents, \"OFVjm5mk704+5WCzFQLJg89Ag6Q=\");\n\n_c = BoardComponents;\nexport default BoardComponents;\n\nvar _c;\n\n$RefreshReg$(_c, \"BoardComponents\");","map":{"version":3,"sources":["/Volumes/Samsung_T5/mac/Programming/JS/Projects/react/chess/src/components/BoardComponents.tsx"],"names":["React","useEffect","useState","CellComponent","BoardComponents","board","setBoard","currentPlayer","swapPlayer","selectedCell","setSelectedCell","click","cell","figure","canMove","moveFigure","color","hightLightCells","updateBoard","newBoard","getCopyBoard","cells","map","row","index","x","y","id"],"mappings":";;;AAAA,OAAOA,KAAP,IAAoBC,SAApB,EAA+BC,QAA/B,QAA+C,OAA/C;AAIA,OAAOC,aAAP,MAA0B,iBAA1B;;;AASA,MAAMC,eAA+B,GAAG,CAAC;AAACC,EAAAA,KAAD;AAAQC,EAAAA,QAAR;AAAkBC,EAAAA,aAAlB;AAAiCC,EAAAA;AAAjC,CAAD,KAAkD;AAAA;;AACtF,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCR,QAAQ,CAAc,IAAd,CAAhD;;AAEA,WAASS,KAAT,CAAeC,IAAf,EAA2B;AAAA;;AACvB,QAAIH,YAAY,IAAIA,YAAY,KAAKG,IAAjC,6BAAyCH,YAAY,CAACI,MAAtD,yDAAyC,qBAAqBC,OAArB,CAA6BF,IAA7B,CAAzC,CAAJ,EAAiF;AAC7EH,MAAAA,YAAY,CAACM,UAAb,CAAwBH,IAAxB;AACAF,MAAAA,eAAe,CAAC,IAAD,CAAf;AACH,KAHD,MAGO;AAAA;;AACH,UAAI,iBAAAE,IAAI,CAACC,MAAL,8DAAaG,KAAb,OAAuBT,aAAvB,aAAuBA,aAAvB,uBAAuBA,aAAa,CAAES,KAAtC,CAAJ,EAAiD;AAC7CN,QAAAA,eAAe,CAACE,IAAD,CAAf;AACH;AACJ;AACJ;;AAEDX,EAAAA,SAAS,CAAC,MAAK;AACXgB,IAAAA,eAAe;AAClB,GAFQ,EAEN,CAACR,YAAD,CAFM,CAAT;;AAIA,WAASQ,eAAT,GAA2B;AACvBZ,IAAAA,KAAK,CAACY,eAAN,CAAsBR,YAAtB;AACAS,IAAAA,WAAW;AACd;;AAED,WAASA,WAAT,GAAuB;AACnB,UAAMC,QAAQ,GAAGd,KAAK,CAACe,YAAN,EAAjB;AACAd,IAAAA,QAAQ,CAACa,QAAD,CAAR;AACH;;AAED,sBACI;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA,cACKd,KAAK,CAACgB,KAAN,CAAYC,GAAZ,CAAgB,CAACC,GAAD,EAAMC,KAAN,kBACb,QAAC,KAAD,CAAO,QAAP;AAAA,gBACKD,GAAG,CAACD,GAAJ,CAASV,IAAD,iBACL,QAAC,aAAD;AACI,QAAA,KAAK,EAAED,KADX;AAEI,QAAA,IAAI,EAAEC,IAFV;AAII,QAAA,QAAQ,EAAEA,IAAI,CAACa,CAAL,MAAWhB,YAAX,aAAWA,YAAX,uBAAWA,YAAY,CAAEgB,CAAzB,KAA8Bb,IAAI,CAACc,CAAL,MAAWjB,YAAX,aAAWA,YAAX,uBAAWA,YAAY,CAAEiB,CAAzB;AAJ5C,SAGSd,IAAI,CAACe,EAHd;AAAA;AAAA;AAAA;AAAA,cADH;AADL,OAAqBH,KAArB;AAAA;AAAA;AAAA;AAAA,YADH;AADL;AAAA;AAAA;AAAA;AAAA,UADJ;AAgBH,CA5CD;;GAAMpB,e;;KAAAA,e;AA+CN,eAAeA,eAAf","sourcesContent":["import React, { FC, useEffect, useState } from \"react\";\nimport { Board } from \"../models/Board\";\nimport { Cell } from \"../models/Cell\";\nimport { Player } from \"../models/Player\";\nimport CellComponent from \"./CellComponent\";\n\ninterface BoardProps {\n    board: Board;\n    setBoard: (board: Board) => void;\n    currentPlayer: Player | null;\n    swapPlayer: () => void;\n}\n\nconst BoardComponents: FC<BoardProps> = ({board, setBoard, currentPlayer, swapPlayer}) => {\n    const [selectedCell, setSelectedCell] = useState<Cell | null>(null);\n\n    function click(cell: Cell) {\n        if (selectedCell && selectedCell !== cell && selectedCell.figure?.canMove(cell)) {\n            selectedCell.moveFigure(cell);\n            setSelectedCell(null);\n        } else {\n            if (cell.figure?.color === currentPlayer?.color) {\n                setSelectedCell(cell);\n            }\n        }\n    }\n\n    useEffect(()=> {\n        hightLightCells()\n    }, [selectedCell])\n\n    function hightLightCells() {\n        board.hightLightCells(selectedCell)\n        updateBoard()\n    }\n\n    function updateBoard() {\n        const newBoard = board.getCopyBoard()\n        setBoard(newBoard)\n    }\n    \n    return (\n        <div className=\"board\">\n            {board.cells.map((row, index) => \n                <React.Fragment key={index}>\n                    {row.map((cell) => \n                        <CellComponent\n                            click={click}\n                            cell={cell}\n                            key={cell.id}\n                            selected={cell.x === selectedCell?.x && cell.y === selectedCell?.y}\n                        />  \n                    )}\n                </React.Fragment>\n            )}\n        </div>\n    )\n}\n\n\nexport default BoardComponents"]},"metadata":{},"sourceType":"module"}