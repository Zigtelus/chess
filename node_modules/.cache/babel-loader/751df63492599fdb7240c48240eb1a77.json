{"ast":null,"code":"import { Colors } from \"../Colors\";\nimport { Figure, FigureNames } from \"./Figure\";\nimport blackLogo from \"../../assets/black-knight.png\";\nimport whiteLogo from \"../../assets/white-knight.png\";\nexport class Knight extends Figure {\n  constructor(color, cell) {\n    super(color, cell);\n    this.logo = color === Colors.BLACK ? blackLogo : whiteLogo;\n    this.name = FigureNames.KNIGHT;\n  }\n\n  canMove(target) {\n    if (!super.canMove(target)) return false;\n    const dx = Math.abs(this.cell.x - target.x);\n    const dy = Math.abs(this.cell.y - target.y);\n    return dx === 1 && dy === 2 || dx === 2 && dy === 1;\n  }\n\n}","map":{"version":3,"sources":["/Volumes/Samsung_T5/mac/Programming/JS/Projects/react/chess/src/models/figures/Knight.ts"],"names":["Colors","Figure","FigureNames","blackLogo","whiteLogo","Knight","constructor","color","cell","logo","BLACK","name","KNIGHT","canMove","target","dx","Math","abs","x","dy","y"],"mappings":"AACA,SAASA,MAAT,QAAuB,WAAvB;AACA,SAASC,MAAT,EAAiBC,WAAjB,QAAoC,UAApC;AACA,OAAOC,SAAP,MAAsB,+BAAtB;AACA,OAAOC,SAAP,MAAsB,+BAAtB;AAGA,OAAO,MAAMC,MAAN,SAAqBJ,MAArB,CAA4B;AAC/BK,EAAAA,WAAW,CAACC,KAAD,EAAgBC,IAAhB,EAA4B;AACnC,UAAMD,KAAN,EAAaC,IAAb;AACA,SAAKC,IAAL,GAAYF,KAAK,KAAKP,MAAM,CAACU,KAAjB,GAAyBP,SAAzB,GAAqCC,SAAjD;AACA,SAAKO,IAAL,GAAYT,WAAW,CAACU,MAAxB;AACH;;AAEDC,EAAAA,OAAO,CAACC,MAAD,EAAwB;AAC3B,QAAI,CAAC,MAAMD,OAAN,CAAcC,MAAd,CAAL,EACI,OAAO,KAAP;AACJ,UAAMC,EAAE,GAAGC,IAAI,CAACC,GAAL,CAAS,KAAKT,IAAL,CAAUU,CAAV,GAAcJ,MAAM,CAACI,CAA9B,CAAX;AACA,UAAMC,EAAE,GAAGH,IAAI,CAACC,GAAL,CAAS,KAAKT,IAAL,CAAUY,CAAV,GAAcN,MAAM,CAACM,CAA9B,CAAX;AAEA,WAAQL,EAAE,KAAK,CAAP,IAAYI,EAAE,KAAK,CAApB,IAA2BJ,EAAE,KAAK,CAAP,IAAYI,EAAE,KAAK,CAArD;AACH;;AAd8B","sourcesContent":["import { Cell } from \"../Cell\";\nimport { Colors } from \"../Colors\";\nimport { Figure, FigureNames } from \"./Figure\";\nimport blackLogo from \"../../assets/black-knight.png\";\nimport whiteLogo from \"../../assets/white-knight.png\";\n\n\nexport class Knight extends Figure {\n    constructor(color: Colors, cell: Cell) {\n        super(color, cell);\n        this.logo = color === Colors.BLACK ? blackLogo : whiteLogo;\n        this.name = FigureNames.KNIGHT;\n    }\n\n    canMove(target: Cell): boolean {\n        if (!super.canMove(target))\n            return false;\n        const dx = Math.abs(this.cell.x - target.x)\n        const dy = Math.abs(this.cell.y - target.y)\n\n        return (dx === 1 && dy === 2) || (dx === 2 && dy === 1)\n    }\n}"]},"metadata":{},"sourceType":"module"}