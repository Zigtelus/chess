{"ast":null,"code":"import { Cell } from \"./Cell\";\nimport { Colors } from \"./Colors\";\nimport { Pawn } from \"./figures/Pawn\";\nexport class Board {\n  constructor() {\n    this.cells = [];\n  }\n\n  initCells() {\n    for (let i = 0; i < 8; i++) {\n      const row = [];\n\n      for (let j = 0; j < 8; j++) {\n        if ((i + j) % 2 !== 0) {\n          row.push(new Cell(this, j, i, Colors.BLACK, null));\n        } else {\n          row.push(new Cell(this, j, i, Colors.WHITE, null));\n        }\n      }\n\n      this.cells.push(row);\n    }\n  }\n\n  getCell(x, y) {\n    return this.cells[y][x];\n  }\n\n  addPawns() {\n    for (let i = 0; i < 8; i++) {\n      new Pawn(Colors.BLACK, this.getCell(i, 1));\n      new Pawn(Colors.WHITE, this.getCell(i, 7));\n    }\n  }\n\n  addKings() {}\n\n  addQueens() {}\n\n  addBishops() {}\n\n  addKnights() {}\n\n  addRooks() {}\n\n  addFigures() {\n    this.addPawns();\n    this.addKings();\n    this.addQueens();\n    this.addBishops();\n    this.addKnights();\n    this.addRooks();\n  }\n\n}","map":{"version":3,"sources":["/Volumes/Samsung_T5/mac/Programming/JS/Projects/react/chess/react-chess-init/src/models/Board.ts"],"names":["Cell","Colors","Pawn","Board","cells","initCells","i","row","j","push","BLACK","WHITE","getCell","x","y","addPawns","addKings","addQueens","addBishops","addKnights","addRooks","addFigures"],"mappings":"AAAA,SAASA,IAAT,QAAqB,QAArB;AACA,SAASC,MAAT,QAAuB,UAAvB;AAEA,SAASC,IAAT,QAAqB,gBAArB;AAGA,OAAO,MAAMC,KAAN,CAAY;AAAA;AAAA,SACfC,KADe,GACG,EADH;AAAA;;AAGRC,EAAAA,SAAS,GAAG;AACf,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,CAApB,EAAuBA,CAAC,EAAxB,EAA4B;AACxB,YAAMC,GAAW,GAAG,EAApB;;AACA,WAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,CAApB,EAAuBA,CAAC,EAAxB,EAA4B;AACxB,YAAI,CAACF,CAAC,GAAGE,CAAL,IAAU,CAAV,KAAgB,CAApB,EAAuB;AACnBD,UAAAA,GAAG,CAACE,IAAJ,CAAS,IAAIT,IAAJ,CAAS,IAAT,EAAeQ,CAAf,EAAkBF,CAAlB,EAAqBL,MAAM,CAACS,KAA5B,EAAmC,IAAnC,CAAT;AACH,SAFD,MAEO;AACHH,UAAAA,GAAG,CAACE,IAAJ,CAAS,IAAIT,IAAJ,CAAS,IAAT,EAAeQ,CAAf,EAAkBF,CAAlB,EAAqBL,MAAM,CAACU,KAA5B,EAAmC,IAAnC,CAAT;AACH;AACJ;;AACD,WAAKP,KAAL,CAAWK,IAAX,CAAgBF,GAAhB;AACH;AACJ;;AAEMK,EAAAA,OAAO,CAACC,CAAD,EAAYC,CAAZ,EAAuB;AACjC,WAAO,KAAKV,KAAL,CAAWU,CAAX,EAAcD,CAAd,CAAP;AACH;;AAEOE,EAAAA,QAAQ,GAAG;AACf,SAAK,IAAIT,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,CAApB,EAAuBA,CAAC,EAAxB,EAA4B;AACxB,UAAIJ,IAAJ,CAASD,MAAM,CAACS,KAAhB,EAAuB,KAAKE,OAAL,CAAaN,CAAb,EAAgB,CAAhB,CAAvB;AACA,UAAIJ,IAAJ,CAASD,MAAM,CAACU,KAAhB,EAAuB,KAAKC,OAAL,CAAaN,CAAb,EAAgB,CAAhB,CAAvB;AACH;AACJ;;AAEOU,EAAAA,QAAQ,GAAG,CAElB;;AAEOC,EAAAA,SAAS,GAAG,CAEnB;;AAEOC,EAAAA,UAAU,GAAG,CAEpB;;AAEOC,EAAAA,UAAU,GAAG,CAEpB;;AAEOC,EAAAA,QAAQ,GAAG,CAElB;;AAEMC,EAAAA,UAAU,GAAG;AAChB,SAAKN,QAAL;AACA,SAAKC,QAAL;AACA,SAAKC,SAAL;AACA,SAAKC,UAAL;AACA,SAAKC,UAAL;AACA,SAAKC,QAAL;AACH;;AAvDc","sourcesContent":["import { Cell } from \"./Cell\";\nimport { Colors } from \"./Colors\";\nimport { Bishop } from \"./figures/Bishop\";\nimport { Pawn } from \"./figures/Pawn\";\nimport { Queen } from \"./figures/Queen\";\n\nexport class Board {\n    cells: Cell[][] = []\n\n    public initCells() {\n        for (let i = 0; i < 8; i++) {\n            const row: Cell[] = []\n            for (let j = 0; j < 8; j++) {\n                if ((i + j) % 2 !== 0) {\n                    row.push(new Cell(this, j, i, Colors.BLACK, null))\n                } else {\n                    row.push(new Cell(this, j, i, Colors.WHITE, null))\n                }\n            }\n            this.cells.push(row)\n        }\n    }\n\n    public getCell(x: number, y: number) {\n        return this.cells[y][x]\n    }\n\n    private addPawns() {\n        for (let i = 0; i < 8; i++) {\n            new Pawn(Colors.BLACK, this.getCell(i, 1))\n            new Pawn(Colors.WHITE, this.getCell(i, 7))\n        }\n    }\n\n    private addKings() {\n        \n    }\n\n    private addQueens() {\n        \n    }\n\n    private addBishops() {\n        \n    }\n\n    private addKnights() {\n        \n    }\n\n    private addRooks() {\n        \n    }\n\n    public addFigures() {\n        this.addPawns()\n        this.addKings()\n        this.addQueens()\n        this.addBishops()\n        this.addKnights()\n        this.addRooks()\n    }\n}"]},"metadata":{},"sourceType":"module"}