{"ast":null,"code":"var _jsxFileName = \"/Volumes/Samsung_T5/mac/Programming/JS/Projects/react/chess/react-chess-init/src/components/BoardComponents.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport CellComponent from \"./CellComponent\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst BoardComponents = ({\n  board,\n  setBoard\n}) => {\n  _s();\n\n  const [selectedCell, setSelectedCell] = useState(null);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"board\",\n    children: board.cells.map((row, index) => /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: row.map(cell => /*#__PURE__*/_jsxDEV(CellComponent, {\n        cell: cell,\n        selected: cell.x === (selectedCell === null || selectedCell === void 0 ? void 0 : selectedCell.x) && cell.y === selectedCell.y\n      }, cell.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 25\n      }, this))\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 17\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 9\n  }, this);\n};\n\n_s(BoardComponents, \"7ZpXPQIyeTuNHRqwYg7ZM80LtbY=\");\n\n_c = BoardComponents;\nexport default BoardComponents;\n\nvar _c;\n\n$RefreshReg$(_c, \"BoardComponents\");","map":{"version":3,"sources":["/Volumes/Samsung_T5/mac/Programming/JS/Projects/react/chess/react-chess-init/src/components/BoardComponents.tsx"],"names":["React","useState","CellComponent","BoardComponents","board","setBoard","selectedCell","setSelectedCell","cells","map","row","index","cell","x","y","id"],"mappings":";;;AAAA,OAAOA,KAAP,IAAoBC,QAApB,QAAoC,OAApC;AAGA,OAAOC,aAAP,MAA0B,iBAA1B;;;AAOA,MAAMC,eAA+B,GAAG,CAAC;AAACC,EAAAA,KAAD;AAAQC,EAAAA;AAAR,CAAD,KAAuB;AAAA;;AAC3D,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCN,QAAQ,CAAc,IAAd,CAAhD;AAEA,sBACI;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA,cACKG,KAAK,CAACI,KAAN,CAAYC,GAAZ,CAAgB,CAACC,GAAD,EAAMC,KAAN,kBACb,QAAC,KAAD,CAAO,QAAP;AAAA,gBACKD,GAAG,CAACD,GAAJ,CAASG,IAAD,iBACL,QAAC,aAAD;AACI,QAAA,IAAI,EAAEA,IADV;AAGI,QAAA,QAAQ,EAAEA,IAAI,CAACC,CAAL,MAAWP,YAAX,aAAWA,YAAX,uBAAWA,YAAY,CAAEO,CAAzB,KAA8BD,IAAI,CAACE,CAAL,KAAWR,YAAY,CAACQ;AAHpE,SAESF,IAAI,CAACG,EAFd;AAAA;AAAA;AAAA;AAAA,cADH;AADL,OAAqBJ,KAArB;AAAA;AAAA;AAAA;AAAA,YADH;AADL;AAAA;AAAA;AAAA;AAAA,UADJ;AAeH,CAlBD;;GAAMR,e;;KAAAA,e;AAqBN,eAAeA,eAAf","sourcesContent":["import React, { FC, useState } from \"react\";\nimport { Board } from \"../models/Board\";\nimport { Cell } from \"../models/Cell\";\nimport CellComponent from \"./CellComponent\";\n\ninterface BoardProps {\n    board: Board;\n    setBoard: (board: Board) => void;\n}\n\nconst BoardComponents: FC<BoardProps> = ({board, setBoard}) => {\n    const [selectedCell, setSelectedCell] = useState<Cell | null>(null)\n    \n    return (\n        <div className=\"board\">\n            {board.cells.map((row, index) => \n                <React.Fragment key={index}>\n                    {row.map((cell) => \n                        <CellComponent\n                            cell={cell}\n                            key={cell.id}\n                            selected={cell.x === selectedCell?.x && cell.y === selectedCell.y}\n                        />  \n                    )}\n                </React.Fragment>\n            )}\n        </div>\n    )\n}\n\n\nexport default BoardComponents"]},"metadata":{},"sourceType":"module"}