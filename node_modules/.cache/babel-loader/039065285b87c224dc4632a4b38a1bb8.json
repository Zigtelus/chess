{"ast":null,"code":"var _jsxFileName = \"/Volumes/Samsung_T5/mac/Programming/JS/Projects/react/chess/src/App.tsx\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport './App.css';\nimport BoardComponents from './components/BoardComponents';\nimport LostFigures from './components/LostFigures';\nimport { Board } from './models/Board';\nimport { Colors } from './models/Colors';\nimport { Player } from './models/Player';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const [board, setBoard] = useState(new Board());\n  const [whitePlayer, setWhitePlayer] = useState(new Player(Colors.WHITE));\n  const [blackPlayer, setBlackPlayer] = useState(new Player(Colors.BLACK));\n  const [currentPlayer, setCurrentPlayer] = useState(null);\n  useEffect(() => {\n    restart();\n    setCurrentPlayer(whitePlayer);\n  }, []);\n\n  function restart() {\n    const newBoard = new Board();\n    newBoard.initCells();\n    newBoard.addFigures();\n    setBoard(newBoard);\n  }\n\n  function swapPlayer() {\n    setCurrentPlayer((currentPlayer === null || currentPlayer === void 0 ? void 0 : currentPlayer.color) === Colors.WHITE ? blackPlayer : whitePlayer);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(BoardComponents, {\n      board: board,\n      setBoard: setBoard,\n      currentPlayer: currentPlayer,\n      swapPlayer: swapPlayer\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(LostFigures, {\n        title: \"\\u0411\\u0435\\u043B\\u044B\\u0435 \\u0444\\u0438\\u0433\\u0443\\u0440\\u044B\",\n        figures: board.lostBlackFigures\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"cZgmXVBcUtIxJaCfTnsEYS4wdok=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Volumes/Samsung_T5/mac/Programming/JS/Projects/react/chess/src/App.tsx"],"names":["useEffect","useState","BoardComponents","LostFigures","Board","Colors","Player","App","board","setBoard","whitePlayer","setWhitePlayer","WHITE","blackPlayer","setBlackPlayer","BLACK","currentPlayer","setCurrentPlayer","restart","newBoard","initCells","addFigures","swapPlayer","color","lostBlackFigures"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,OAAO,WAAP;AACA,OAAOC,eAAP,MAA4B,8BAA5B;AACA,OAAOC,WAAP,MAAwB,0BAAxB;AACA,SAASC,KAAT,QAAsB,gBAAtB;AACA,SAASC,MAAT,QAAuB,iBAAvB;AACA,SAASC,MAAT,QAAuB,iBAAvB;;;AAGA,MAAMC,GAAG,GAAG,MAAM;AAAA;;AAEhB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBR,QAAQ,CAAC,IAAIG,KAAJ,EAAD,CAAlC;AACA,QAAM,CAACM,WAAD,EAAcC,cAAd,IAAgCV,QAAQ,CAAC,IAAIK,MAAJ,CAAWD,MAAM,CAACO,KAAlB,CAAD,CAA9C;AACA,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCb,QAAQ,CAAC,IAAIK,MAAJ,CAAWD,MAAM,CAACU,KAAlB,CAAD,CAA9C;AACA,QAAM,CAACC,aAAD,EAAgBC,gBAAhB,IAAoChB,QAAQ,CAAgB,IAAhB,CAAlD;AAEAD,EAAAA,SAAS,CAAC,MAAK;AACbkB,IAAAA,OAAO;AACPD,IAAAA,gBAAgB,CAACP,WAAD,CAAhB;AACD,GAHQ,EAGN,EAHM,CAAT;;AAMA,WAASQ,OAAT,GAAmB;AACjB,UAAMC,QAAQ,GAAG,IAAIf,KAAJ,EAAjB;AACAe,IAAAA,QAAQ,CAACC,SAAT;AACAD,IAAAA,QAAQ,CAACE,UAAT;AACAZ,IAAAA,QAAQ,CAACU,QAAD,CAAR;AACD;;AAED,WAASG,UAAT,GAAsB;AACpBL,IAAAA,gBAAgB,CAAC,CAAAD,aAAa,SAAb,IAAAA,aAAa,WAAb,YAAAA,aAAa,CAAEO,KAAf,MAAyBlB,MAAM,CAACO,KAAhC,GAAwCC,WAAxC,GAAsDH,WAAvD,CAAhB;AACD;;AAED,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,4BACE,QAAC,eAAD;AACE,MAAA,KAAK,EAAEF,KADT;AAEE,MAAA,QAAQ,EAAEC,QAFZ;AAGE,MAAA,aAAa,EAAIO,aAHnB;AAIE,MAAA,UAAU,EAAIM;AAJhB;AAAA;AAAA;AAAA;AAAA,YADF,eAOE;AAAA,6BACE,QAAC,WAAD;AACE,QAAA,KAAK,EAAC,qEADR;AAEE,QAAA,OAAO,EAAEd,KAAK,CAACgB;AAFjB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAPF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAgBD,CAxCD;;GAAMjB,G;;KAAAA,G;AA0CN,eAAeA,GAAf","sourcesContent":["import { useEffect, useState } from 'react';\nimport './App.css';\nimport BoardComponents from './components/BoardComponents';\nimport LostFigures from './components/LostFigures';\nimport { Board } from './models/Board';\nimport { Colors } from './models/Colors';\nimport { Player } from './models/Player';\n\n\nconst App = () => {\n\n  const [board, setBoard] = useState(new Board())\n  const [whitePlayer, setWhitePlayer] = useState(new Player(Colors.WHITE))\n  const [blackPlayer, setBlackPlayer] = useState(new Player(Colors.BLACK))\n  const [currentPlayer, setCurrentPlayer] = useState<Player | null>(null)\n\n  useEffect(()=> {\n    restart()\n    setCurrentPlayer(whitePlayer)\n  }, [])\n\n\n  function restart() {\n    const newBoard = new Board();\n    newBoard.initCells()\n    newBoard.addFigures()\n    setBoard(newBoard)\n  }\n\n  function swapPlayer() {\n    setCurrentPlayer(currentPlayer?.color === Colors.WHITE ? blackPlayer : whitePlayer)\n  }\n\n  return (\n    <div className=\"app\">\n      <BoardComponents \n        board={board}\n        setBoard={setBoard}\n        currentPlayer = {currentPlayer}\n        swapPlayer = {swapPlayer}\n      />\n      <div>\n        <LostFigures \n          title=\"Белые фигуры\" \n          figures={board.lostBlackFigures}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}