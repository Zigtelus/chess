[{"/Volumes/Samsung_T5/mac/Programming/JS/Projects/react/chess/src/index.tsx":"1","/Volumes/Samsung_T5/mac/Programming/JS/Projects/react/chess/src/App.tsx":"2","/Volumes/Samsung_T5/mac/Programming/JS/Projects/react/chess/src/models/Board.ts":"3","/Volumes/Samsung_T5/mac/Programming/JS/Projects/react/chess/src/components/BoardComponents.tsx":"4","/Volumes/Samsung_T5/mac/Programming/JS/Projects/react/chess/src/models/Cell.ts":"5","/Volumes/Samsung_T5/mac/Programming/JS/Projects/react/chess/src/models/figures/King.ts":"6","/Volumes/Samsung_T5/mac/Programming/JS/Projects/react/chess/src/models/figures/Queen.ts":"7","/Volumes/Samsung_T5/mac/Programming/JS/Projects/react/chess/src/models/figures/Pawn.ts":"8","/Volumes/Samsung_T5/mac/Programming/JS/Projects/react/chess/src/models/figures/Bishop.ts":"9","/Volumes/Samsung_T5/mac/Programming/JS/Projects/react/chess/src/models/figures/Rook.ts":"10","/Volumes/Samsung_T5/mac/Programming/JS/Projects/react/chess/src/models/figures/Knight.ts":"11","/Volumes/Samsung_T5/mac/Programming/JS/Projects/react/chess/src/models/Colors.tsx":"12","/Volumes/Samsung_T5/mac/Programming/JS/Projects/react/chess/src/components/CellComponent.tsx":"13","/Volumes/Samsung_T5/mac/Programming/JS/Projects/react/chess/src/models/figures/Figure.ts":"14","/Volumes/Samsung_T5/mac/Programming/JS/Projects/react/chess/src/models/Player.tsx":"15","/Volumes/Samsung_T5/mac/Programming/JS/Projects/react/chess/src/components/LostFigures.tsx":"16"},{"size":155,"mtime":1652987521270,"results":"17","hashOfConfig":"18"},{"size":1431,"mtime":1655297152920,"results":"19","hashOfConfig":"18"},{"size":2960,"mtime":1655297360460,"results":"20","hashOfConfig":"18"},{"size":1793,"mtime":1655295245320,"results":"21","hashOfConfig":"18"},{"size":2727,"mtime":1655295784370,"results":"22","hashOfConfig":"18"},{"size":579,"mtime":1653839342410,"results":"23","hashOfConfig":"18"},{"size":807,"mtime":1653842689690,"results":"24","hashOfConfig":"18"},{"size":1365,"mtime":1655293909170,"results":"25","hashOfConfig":"18"},{"size":665,"mtime":1655289927360,"results":"26","hashOfConfig":"18"},{"size":724,"mtime":1655289308110,"results":"27","hashOfConfig":"18"},{"size":763,"mtime":1655292614450,"results":"28","hashOfConfig":"18"},{"size":64,"mtime":1652988716000,"results":"29","hashOfConfig":"18"},{"size":771,"mtime":1653830909860,"results":"30","hashOfConfig":"18"},{"size":958,"mtime":1655288129120,"results":"31","hashOfConfig":"18"},{"size":146,"mtime":1655294574350,"results":"32","hashOfConfig":"18"},{"size":546,"mtime":1655297083660,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"1odzj21",{"filePath":"37","messages":"38","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"36"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"36"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Volumes/Samsung_T5/mac/Programming/JS/Projects/react/chess/src/index.tsx",[],["69","70"],"/Volumes/Samsung_T5/mac/Programming/JS/Projects/react/chess/src/App.tsx",["71","72","73"],"/Volumes/Samsung_T5/mac/Programming/JS/Projects/react/chess/src/models/Board.ts",[],"/Volumes/Samsung_T5/mac/Programming/JS/Projects/react/chess/src/components/BoardComponents.tsx",["74"],"import React, { FC, useEffect, useState } from \"react\";\nimport { Board } from \"../models/Board\";\nimport { Cell } from \"../models/Cell\";\nimport { Player } from \"../models/Player\";\nimport CellComponent from \"./CellComponent\";\n\ninterface BoardProps {\n    board: Board;\n    setBoard: (board: Board) => void;\n    currentPlayer: Player | null;\n    swapPlayer: () => void;\n}\n\nconst BoardComponents: FC<BoardProps> = ({board, setBoard, currentPlayer, swapPlayer}) => {\n    const [selectedCell, setSelectedCell] = useState<Cell | null>(null);\n\n    function click(cell: Cell) {\n        if (selectedCell && selectedCell !== cell && selectedCell.figure?.canMove(cell)) {\n            selectedCell.moveFigure(cell);\n            swapPlayer()\n            setSelectedCell(null);\n        } else {\n            if (cell.figure?.color === currentPlayer?.color) {\n                setSelectedCell(cell);\n            }\n        }\n    }\n\n    useEffect(()=> {\n        hightLightCells()\n    }, [selectedCell])\n\n    function hightLightCells() {\n        board.hightLightCells(selectedCell)\n        updateBoard()\n    }\n\n    function updateBoard() {\n        const newBoard = board.getCopyBoard()\n        setBoard(newBoard)\n    }\n    \n    return (\n        <div className=\"board\">\n            {board.cells.map((row, index) => \n                <React.Fragment key={index}>\n                    {row.map((cell) => \n                        <CellComponent\n                            click={click}\n                            cell={cell}\n                            key={cell.id}\n                            selected={cell.x === selectedCell?.x && cell.y === selectedCell?.y}\n                        />  \n                    )}\n                </React.Fragment>\n            )}\n        </div>\n    )\n}\n\n\nexport default BoardComponents","/Volumes/Samsung_T5/mac/Programming/JS/Projects/react/chess/src/models/Cell.ts",[],"/Volumes/Samsung_T5/mac/Programming/JS/Projects/react/chess/src/models/figures/King.ts",[],"/Volumes/Samsung_T5/mac/Programming/JS/Projects/react/chess/src/models/figures/Queen.ts",[],"/Volumes/Samsung_T5/mac/Programming/JS/Projects/react/chess/src/models/figures/Pawn.ts",["75","76"],"import { Cell } from \"../Cell\";\nimport { Colors } from \"../Colors\";\nimport { Figure, FigureNames } from \"./Figure\";\nimport blackLogo from \"../../assets/black-pawn.png\";\nimport whiteLogo from \"../../assets/white-pawn.png\";\n\n\nexport class Pawn extends Figure {\n\n    isFirstStep: boolean = true;\n\n    constructor(color: Colors, cell: Cell) {\n        super(color, cell);\n        this.logo = color === Colors.BLACK ? blackLogo : whiteLogo;\n        this.name = FigureNames.PAWN;\n    }\n\n    canMove(target: Cell): boolean {\n        if (!super.canMove(target))\n            return false;\n        const direction = this.cell.figure?.color === Colors.BLACK ? 1: -1;\n        const firstStepDirection = this.cell.figure?.color === Colors.BLACK ? 2: -2;\n\n        if ((target.y === this.cell.y + direction || this.isFirstStep\n            && (target.y === this.cell.y + firstStepDirection)) \n        && target.x === this.cell.x\n        && this.cell.board.getCell(target.x, target.y).isEmpty()) {\n            return true;\n        }\n\n        if (target.y === this.cell.y + direction\n        && (target.x === this.cell.x + 1 || target.x === this.cell.x - 1)\n        && this.cell.isEnemy(target)) {\n            return true;\n        }\n        \n\n        return false;\n    }\n\n    moveFigure(target: Cell): void {\n        super.moveFigure(target);\n        this.isFirstStep = false;\n    }\n}","/Volumes/Samsung_T5/mac/Programming/JS/Projects/react/chess/src/models/figures/Bishop.ts",[],"/Volumes/Samsung_T5/mac/Programming/JS/Projects/react/chess/src/models/figures/Rook.ts",[],"/Volumes/Samsung_T5/mac/Programming/JS/Projects/react/chess/src/models/figures/Knight.ts",[],"/Volumes/Samsung_T5/mac/Programming/JS/Projects/react/chess/src/models/Colors.tsx",[],"/Volumes/Samsung_T5/mac/Programming/JS/Projects/react/chess/src/components/CellComponent.tsx",[],"/Volumes/Samsung_T5/mac/Programming/JS/Projects/react/chess/src/models/figures/Figure.ts",[],"/Volumes/Samsung_T5/mac/Programming/JS/Projects/react/chess/src/models/Player.tsx",[],"/Volumes/Samsung_T5/mac/Programming/JS/Projects/react/chess/src/components/LostFigures.tsx",["77"],{"ruleId":"78","replacedBy":"79"},{"ruleId":"80","replacedBy":"81"},{"ruleId":"82","severity":1,"message":"83","line":13,"column":23,"nodeType":"84","messageId":"85","endLine":13,"endColumn":37},{"ruleId":"82","severity":1,"message":"86","line":14,"column":23,"nodeType":"84","messageId":"85","endLine":14,"endColumn":37},{"ruleId":"87","severity":1,"message":"88","line":20,"column":6,"nodeType":"89","endLine":20,"endColumn":8,"suggestions":"90"},{"ruleId":"87","severity":1,"message":"91","line":31,"column":8,"nodeType":"89","endLine":31,"endColumn":22,"suggestions":"92"},{"ruleId":"93","severity":1,"message":"94","line":24,"column":51,"nodeType":"95","messageId":"96","endLine":24,"endColumn":53},{"ruleId":"93","severity":1,"message":"94","line":25,"column":13,"nodeType":"95","messageId":"96","endLine":25,"endColumn":15},{"ruleId":"97","severity":1,"message":"98","line":15,"column":51,"nodeType":"99","endLine":15,"endColumn":86},"no-native-reassign",["100"],"no-negated-in-lhs",["101"],"@typescript-eslint/no-unused-vars","'setWhitePlayer' is assigned a value but never used.","Identifier","unusedVar","'setBlackPlayer' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'whitePlayer'. Either include it or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setCurrentPlayer' needs the current value of 'whitePlayer'.","ArrayExpression",["102"],"React Hook useEffect has a missing dependency: 'hightLightCells'. Either include it or remove the dependency array.",["103"],"no-mixed-operators","Unexpected mix of '||' and '&&'.","LogicalExpression","unexpectedMixedOperator","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation",{"desc":"104","fix":"105"},{"desc":"106","fix":"107"},"Update the dependencies array to be: [whitePlayer]",{"range":"108","text":"109"},"Update the dependencies array to be: [hightLightCells, selectedCell]",{"range":"110","text":"111"},[671,673],"[whitePlayer]",[966,980],"[hightLightCells, selectedCell]"]